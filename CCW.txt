// 대표 문제 : BOJ 11758 G5 CCW
// https://www.acmicpc.net/problem/11758

import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.util.Scanner;

/*	CCW 개요
 * 
 * 	선분 교차 판별(CCW; Counter Clock Wise)
 * 	점 3개를 차례로 이었을 때 반시계 방향인지, 시계 방향인지, 일직선인지 알 수 있는 알고리즘
 * */

public class CCW {

	public static void main(String[] args) {
		
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		Scanner sc = new Scanner(System.in);
		
		int x1 = sc.nextInt();
		int y1 = sc.nextInt();
		int x2 = sc.nextInt();
		int y2 = sc.nextInt();
		int x3 = sc.nextInt();
		int y3 = sc.nextInt();
		
		int S = CCW(y1, x1, y2, x2, y3, x3);
		
		if (S == 1) System.out.println("CCW 값은 양수, 세 점을 차례로 이으면 반시계 방향");
		else if (S == -1) System.out.println("CCW 값은 음수, 세 점을 차례로 이으면 시계 방향");
		else if (S == 0) System.out.println("CCW 값은 0, 세 점을 차례로 이으면 일직선");
	}
	
	/*	매개변수
	 * 	- 점 (y1, x1)
	 * 	- 점 (y2, x2)
	 * 	- 점 (y3, x3)
	 * 
	 * 	return
	 * 	- 결과가 양수 	: 반시계 방향
	 * 	- 결과가 음수 	: 시계 방향
	 * 	- 결과가 0		: 일직선
	 * */
	private static int CCW(int y1, int x1, int y2, int x2, int y3, int x3) {
		int S = x1 * y2 + x2 * y3 + x3 * y1 - (x2 * y1 + x3 * y2 + x1 * y3);
		
		if (S > 0) return 1;
		else if (S < 0) return -1;
		else return 0;
	}

}